{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","first_button","document","querySelector","classList","remove","add","second_button","current_featured","new_featured","createElement","parentNode","appendChild","childNodes","length","current_content","new_links","current_featured_2","new_featured_2","current_content_2","new_links_2","render","isSideNavExpanded","onClickSideNavExpand","aria-label","href","class","src","alt","Button","as","renderIcon","ArrowRight20","role","hasIconOnly","kind","className","onClick","isActive","Menu32","expanded","LeadSpace","type","theme","title","copy","gradient","buttons","image","sources","breakpoint","defaultSrc","FeatureCardBlockLarge","eyebrow","heading","cta","LinkWithIcon","Component","Boolean","window","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6fda72c2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.scss';\nimport './App.css';\n\nimport { LeadSpace, FeatureCardBlockLarge, LinkWithIcon } from '@carbon/ibmdotcom-react';\nimport { Button } from 'carbon-components-react';\nimport { ArrowRight20, Menu32 } from '@carbon/icons-react';\n\nimport HeaderContainer from \"carbon-components-react/lib/components/UIShell/HeaderContainer\";\nimport {\n  Header,\n  HeaderGlobalBar,\n  SideNav,\n  SideNavItems,\n  SideNavMenuItem\n} from \"carbon-components-react/lib/components/UIShell\";\n\nclass App extends Component {\n\n  componentDidMount() {\n\n    // REPLACE the default leadspace buttons stylesheet\n    var first_button = document.querySelector('.th--btn-first')\n        first_button.classList.remove(\"bx--btn--tertiary\")\n        first_button.classList.add(\"bx--btn--primary\")\n    var second_button = document.querySelector('.th--btn-second')\n        second_button.classList.remove(\"bx--btn--primary\")\n        second_button.classList.add(\"bx--btn--tertiary\")\n\n    // REPLACE the default featured FIRST card stylesheet and link behaviors\n    var current_featured = document.querySelector('.th--featured-first .th--featured-card')\n    var new_featured = document.createElement('div')\n        new_featured.classList.add(\"th--featured-card\", \"bx--tile\", \"bx--tile--clickable\", \"bx--card\", \"bx--feature-card-block-large__card\")\n        current_featured.parentNode.appendChild(new_featured)\n        while (current_featured.childNodes.length > 0) {\n          new_featured.appendChild(current_featured.childNodes[0]);\n        }\n        current_featured.remove()\n        document.querySelector('.bx--card__eyebrow').remove()\n\n    // ADD the links inside the FIRST card\n    var current_content = document.querySelector('.th--featured-first .th--featured-card .bx--card__footer')\n    var new_links = document.querySelector('.th--featured-first .th--featured-links')\n        while (new_links.childNodes.length > 0) {\n          current_content.appendChild(new_links.childNodes[0]);\n        }\n\n    // REPLACE the default featured SECOND card stylesheet and link behaviors\n    var current_featured_2 = document.querySelector('.th--featured-second .th--featured-card')\n    var new_featured_2 = document.createElement('div')\n        new_featured_2.classList.add(\"th--featured-card\", \"bx--tile\", \"bx--tile--clickable\", \"bx--card\", \"bx--feature-card-block-large__card\")\n        current_featured_2.parentNode.appendChild(new_featured_2)\n        while (current_featured_2.childNodes.length > 0) {\n          new_featured_2.appendChild(current_featured_2.childNodes[0]);\n        }\n        current_featured_2.remove()\n        document.querySelector('.bx--card__eyebrow').remove()\n\n    // ADD the links inside the SECOND card\n    var current_content_2 = document.querySelector('.th--featured-second .th--featured-card .bx--card__footer')\n    var new_links_2 = document.querySelector('.th--featured-second .th--featured-links')\n        while (new_links_2.childNodes.length > 0) {\n          current_content_2.appendChild(new_links_2.childNodes[0]);\n        }\n\n  }\n\n  render() {\n    return (\n      <>\n\n        <HeaderContainer render={({ isSideNavExpanded, onClickSideNavExpand }) => (\n          <>\n            <Header aria-label=\"IBM Platform Name\">\n              <a href=\"/\" class=\"th--nav-logo\">\n                <img src=\"/images/logo.svg\" alt=\"Talent Zoom\" />\n              </a>\n              <HeaderGlobalBar>\n                <div class=\"th--nav-links\">\n                  <a href=\"/\">Job seeker</a>\n                  <a href=\"/employer\">Employers</a>\n                  <a href=\"/aboutus\">About us</a>\n                  <a href=\"/login\">Login</a>\n                  <Button href=\"/signup\" as=\"button\" renderIcon={ArrowRight20} role=\"button\">Sign up</Button>\n                </div>\n                <Button \n                  hasIconOnly \n                  kind=\"ghost\" \n                  className=\"th--nav-menu\"\n                  onClick={onClickSideNavExpand} \n                  isActive={isSideNavExpanded} \n                  renderIcon={Menu32} \n                />\n              </HeaderGlobalBar>\n              <SideNav aria-label=\"Side navigation\" expanded={isSideNavExpanded}>\n                <SideNavItems>\n                  <SideNavMenuItem href=\"/\">Job seeker</SideNavMenuItem>\n                  <SideNavMenuItem href=\"/employer\">Employers</SideNavMenuItem>\n                  <SideNavMenuItem href=\"/aboutus\">About us</SideNavMenuItem>\n                  <SideNavMenuItem href=\"/login\">Login</SideNavMenuItem>\n                  <SideNavMenuItem href=\"/signup\">Sign up</SideNavMenuItem>\n                </SideNavItems>\n              </SideNav>\n            </Header>\n          </>\n        )} />\n\n        <LeadSpace type=\"default\"\n          theme=\"g100\"\n          title=\"Get matched with your dream job\"\n          copy=\"Ditch the job applications and start getting matched with top employers.\"\n          gradient={true}\n          buttons={[\n            {\n              copy: 'I’m ready to be matched',\n              renderIcon: ArrowRight20,\n              href: '/signup',\n              className: 'th--btn-first'\n            },\n            {\n              copy: 'I’m hiring',\n              renderIcon: ArrowRight20,\n              href: '/signup',\n              className: 'th--btn-second'\n            },\n          ]}\n          image={{\n            sources: [\n              { src: '/images/app-leadspace.jpg', breakpoint: 'sm' },\n              { src: '/images/app-leadspace.jpg', breakpoint: 'md' },\n            ],\n            defaultSrc: '/images/app-leadspace.jpg',\n            alt: 'lead space image',\n          }}\n        />\n\n        <div class=\"th--featured-first\">\n          <FeatureCardBlockLarge\n            className=\"bx--card bx--feature-card-block-large__card th--featured-card\"\n            eyebrow=\"none\"\n            heading=\"Want to work remote?\"\n            copy=\"As workplaces evolve, so do we. Discover remote, contract, and full time employment opportunities.\"\n            cta={{\n              href: '#',\n            }}\n            image={{\n              defaultSrc: '/images/app-work-remote.jpg',\n              alt: 'lead space image',\n            }}\n          />\n          <div class=\"th--featured-links\">\n            <LinkWithIcon href=\"/signup\">\n              <span>Create a profile</span>\n              <ArrowRight20 />\n            </LinkWithIcon>\n            <LinkWithIcon href=\"faqjobseeker\">\n              <span>Learn more</span>\n              <ArrowRight20 />\n            </LinkWithIcon>\n          </div>\n        </div>\n\n        <div class=\"th--featured-second\">\n          <FeatureCardBlockLarge\n            className=\"bx--card bx--feature-card-block-large__card th--featured-card\"\n            eyebrow=\"none\"\n            heading=\"You're in full control\"\n            copy=\"Receive interview requests directly from companies that fit your needs. We’ll be sure to block your profile from current and requested employers.\"\n            cta={{\n              href: '#',\n            }}\n            image={{\n              defaultSrc: '/images/app-full-control.jpg',\n              alt: 'lead space image',\n            }}\n          />\n          <div class=\"th--featured-links\">\n            <LinkWithIcon href=\"/signup\">\n              <span>Sign up to get matched</span>\n              <ArrowRight20 />\n            </LinkWithIcon>\n          </div>\n        </div>\n        \n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}